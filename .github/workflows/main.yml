name: Build and Deploy

on:
  push:
    tags:
      - "v*"

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          push: true
          context: .
          file: Dockerfile
          tags: ghcr.io/jamie-mh/dockercomposesecrets:latest,ghcr.io/jamie-mh/dockercomposesecrets:${{ github.ref_name }}

  deploy:
    runs-on: ubuntu-latest
    needs: build

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Set up SSH
        run: |
          mkdir ~/.ssh
          echo "${{ secrets.DEPLOY_KEY }}" > ~/.ssh/deploy.key
          chmod 700 ~/.ssh
          chmod 600 ~/.ssh/deploy.key

          cat >>~/.ssh/config <<END
          Host deploy
              HostName ${{ secrets.DEPLOY_HOST }}
              User ${{ secrets.DEPLOY_USER }}
              IdentityFile ~/.ssh/deploy.key
              StrictHostKeyChecking no
              ControlMaster auto
              ControlPath ~/.ssh/control-%C
              ControlPersist yes
          END
          
      - name: Get secrets
        uses: bitwarden/sm-action@v2
        with:
          access_token: ${{ secrets.BW_ACCESS_TOKEN }}
          secrets: |
            ce994dd3-ff6d-42f6-9f72-b20f011b6397 > FLASK_SECRET_KEY
            9d0855d5-7536-46e2-b2ce-b20f011b4e11 > RECAPTCHA_PRIVATE_KEY
            8e35b369-192a-408d-836e-b20f011b759e > DATABASE_PASSWORD

      - name: Deploy
        run: |
          export DOCKER_HOST=ssh://deploy
          echo ${{ secrets.GITHUB_TOKEN }} | docker login ghcr.io -u ${{ github.actor }} --password-stdin

          # Deploy current tag
          sed -i 's/dockercomposesecrets:latest/dockercomposesecrets:${{ github.ref_name }}/' compose.yaml

          docker compose -f compose.yaml pull app
          docker compose -f compose.yaml down app
          docker compose -f compose.yaml up --no-deps -d
          docker image prune -f
